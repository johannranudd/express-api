// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(uuid())
  email     String    @unique
  firstName String
  lastName  String
  password  String
  role      UserRole  @default(Applicant)
  // Applications Application[]
  // Offers    Offer[]
  Listings  Listing[]
  // Application Application[]
  // Offer       Offer[]
}

model Listing {
  uuid         String   @id @unique @default(uuid())
  title        String
  tags         String[]
  description  String
  requirements String[]
  deadline     DateTime
  created      DateTime @default(now())
  updated      DateTime @updatedAt
  // Applications Application[]
  // Offer        Offer[]
  author       User     @relation(fields: [authorId], references: [id])
  authorId     String
  // userRole     UserRole
  // listingState ListingState
}

// enum ListingState {
//   Active
//   Ended
// }

enum UserRole {
  Applicant
  Client
  Admin
}

// model Application {
//   uuid        String   @id @unique @default(uuid())
//   User        User?    @relation(fields: [userId], references: [id])
//   userId      String?
//   Listing     Listing? @relation(fields: [listingUuid], references: [uuid])
//   listingUuid String?
// }

// model Offer {
//   id            String      @id @default(uuid())
//   listing       Listing     @relation(fields: [listingId], references: [id])
//   listingId     String
//   application   Application @relation(fields: [applicantId], references: [id])
//   applicationId String
//   user          User        @relation(fields: [userId], references: [id])
//   userId        String
//   applicantId   String
//   applicant     UserRole
//   state         OfferState
// }

// enum OfferState {
//   Pending
//   Accepted
//   Rejected
// }
